#!/usr/bin/env python3
"""
–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–¥–µ—Ä–∂–µ–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Ç–æ–∫–µ–Ω–æ–≤.
"""

from __future__ import annotations
import sys
import logging
from datetime import datetime, timezone, timedelta

from src.core.json_logging import configure_logging
from src.adapters.db.base import SessionLocal
from src.adapters.repositories.tokens_repo import TokensRepository
from src.domain.settings.service import SettingsService


def main():
    configure_logging(level="INFO")
    
    print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –ü–æ—á–µ–º—É –¥–∞–Ω–Ω—ã–µ –Ω–µ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è 20 –º–∏–Ω—É—Ç?")
    print("=" * 60)
    
    with SessionLocal() as sess:
        repo = TokensRepository(sess)
        settings = SettingsService(sess)
        
        # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        min_score = float(settings.get("min_score") or 0.1)
        hot_interval = int(settings.get("hot_interval_sec") or 10)
        cold_interval = int(settings.get("cold_interval_sec") or 45)
        min_score_change = float(settings.get("min_score_change") or 0.05)
        
        print("\n‚öôÔ∏è –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:")
        print(f"   min_score (–≥—Ä–∞–Ω–∏—Ü–∞ hot/cold): {min_score}")
        print(f"   hot_interval: {hot_interval} —Å–µ–∫")
        print(f"   cold_interval: {cold_interval} —Å–µ–∫")
        print(f"   min_score_change: {min_score_change:.1%} (—Ñ–∏–ª—å—Ç—Ä –Ω–µ–∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π)")
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç–∞—Ç—É—Å—ã —Ç–æ–∫–µ–Ω–æ–≤
        active_tokens = repo.list_by_status("active", limit=1000)
        monitoring_tokens = repo.list_by_status("monitoring", limit=100)
        archived_tokens = repo.list_by_status("archived", limit=100)
        
        print(f"\nüìä –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–æ–≤:")
        print(f"   ‚úÖ active: {len(active_tokens)} (–¥–æ–ª–∂–Ω—ã –æ–±–Ω–æ–≤–ª—è—Ç—å—Å—è)")
        print(f"   ‚è≥ monitoring: {len(monitoring_tokens)} (–ù–ï –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è)")
        print(f"   üì¶ archived: {len(archived_tokens)} (–ù–ï –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è)")
        
        if len(active_tokens) == 0:
            print("\n‚ùå –ü–†–û–ë–õ–ï–ú–ê: –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ç–æ–∫–µ–Ω–æ–≤!")
            print("   –í—Å–µ —Ç–æ–∫–µ–Ω—ã –º–æ–≥–ª–∏ –±—ã—Ç—å –ø–µ—Ä–µ–≤–µ–¥–µ–Ω—ã –≤ —Å—Ç–∞—Ç—É—Å 'archived' –∏–ª–∏ 'monitoring'")
            return
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã
        now = datetime.now(tz=timezone.utc)
        hot_count = 0
        cold_count = 0
        stale_count = 0
        very_stale_count = 0
        
        print(f"\nüéØ –ê–Ω–∞–ª–∏–∑ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ç–æ–∫–µ–Ω–æ–≤ (–ø–µ—Ä–≤—ã–µ 10):")
        print("–°–∏–º–≤–æ–ª | –°–∫–æ—Ä | –ì—Ä—É–ø–ø–∞ | –ú–∏–Ω—É—Ç –Ω–∞–∑–∞–¥ | –°—Ç–∞—Ç—É—Å")
        print("-" * 55)
        
        for token in active_tokens[:10]:
            snap = repo.get_latest_snapshot(token.id)
            symbol = (token.symbol or "UNK")[:6]
            
            if snap:
                # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º timezone
                snap_time = snap.created_at
                if snap_time.tzinfo is None:
                    snap_time = snap_time.replace(tzinfo=timezone.utc)
                
                score = snap.smoothed_score if snap.smoothed_score is not None else snap.score
                is_hot = score is not None and score >= min_score
                group = "hot" if is_hot else "cold"
                expected_interval = hot_interval if is_hot else cold_interval
                
                minutes_ago = (now - snap_time).total_seconds() / 60
                
                # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
                if minutes_ago > 20:  # –ë–æ–ª—å—à–µ 20 –º–∏–Ω—É—Ç - –æ—á–µ–Ω—å –ø–ª–æ—Ö–æ
                    status = "‚ùå –ö—Ä–∏—Ç–∏—á–Ω–æ"
                    very_stale_count += 1
                elif minutes_ago > (expected_interval / 60) * 3:  # –ë–æ–ª—å—à–µ 3x –æ–∂–∏–¥–∞–µ–º–æ–≥–æ
                    status = "‚ö†Ô∏è –£—Å—Ç–∞—Ä–µ–ª"
                    stale_count += 1
                elif minutes_ago > (expected_interval / 60) * 1.5:  # –ë–æ–ª—å—à–µ 1.5x –æ–∂–∏–¥–∞–µ–º–æ–≥–æ
                    status = "‚è≥ –ó–∞–¥–µ—Ä–∂–∫–∞"
                else:
                    status = "‚úÖ –°–≤–µ–∂–∏–π"
                
                score_str = f"{score:.3f}" if score is not None else "None"
                print(f"{symbol:6} | {score_str:>4} | {group:4} | {minutes_ago:9.1f} | {status}")
                
                if is_hot:
                    hot_count += 1
                else:
                    cold_count += 1
            else:
                print(f"{symbol:6} | None | cold | –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö | ‚ùå –ö—Ä–∏—Ç–∏—á–Ω–æ")
                cold_count += 1
                very_stale_count += 1
        
        print(f"\nüìà –ò—Ç–æ–≥–∏:")
        print(f"   Hot —Ç–æ–∫–µ–Ω—ã: {hot_count} (–æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è –∫–∞–∂–¥—ã–µ {hot_interval}—Å)")
        print(f"   Cold —Ç–æ–∫–µ–Ω—ã: {cold_count} (–æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è –∫–∞–∂–¥—ã–µ {cold_interval}—Å)")
        print(f"   –£—Å—Ç–∞—Ä–µ–≤—à–∏–µ: {stale_count}")
        print(f"   –ö—Ä–∏—Ç–∏—á–Ω—ã–µ (>20 –º–∏–Ω): {very_stale_count}")
        
        # –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–∏—á–∏–Ω
        print(f"\nüîß –í–û–ó–ú–û–ñ–ù–´–ï –ü–†–ò–ß–ò–ù–´ –ó–ê–î–ï–†–ñ–ï–ö:")
        
        if very_stale_count > 0:
            print(f"‚ùå {very_stale_count} —Ç–æ–∫–µ–Ω–æ–≤ –Ω–µ –æ–±–Ω–æ–≤–ª—è–ª–∏—Å—å >20 –º–∏–Ω—É—Ç!")
        
        print("\n1. ü§ñ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ (scheduler):")
        print("   ‚Ä¢ –ù–µ –∑–∞–ø—É—â–µ–Ω –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
        print("   ‚Ä¢ –ó–∞–≤–∏—Å –∏–ª–∏ —É–ø–∞–ª —Å –æ—à–∏–±–∫–æ–π")
        print("   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: journalctl -u tothemoon.service")
        
        print("\n2. üåê –í–Ω–µ—à–Ω–∏–µ API:")
        print("   ‚Ä¢ DexScreener –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –∏–ª–∏ –ª–∏–º–∏—Ç–∏—Ä—É–µ—Ç")
        print("   ‚Ä¢ –¢–∞–π–º–∞—É—Ç—ã –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–∞—Ö")
        print("   ‚Ä¢ –û—à–∏–±–∫–∏ 429 (rate limit exceeded)")
        
        print("\n3. üìä –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö:")
        print(f"   ‚Ä¢ –ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–∫–æ—Ä–∞ <{min_score_change:.1%} –∏–≥–Ω–æ—Ä–∏—Ä—É—é—Ç—Å—è")
        print("   ‚Ä¢ –¢–æ–∫–µ–Ω—ã –º–æ–≥–ª–∏ '–∑–∞—Å—Ç—Ä—è—Ç—å' –±–µ–∑ –∑–Ω–∞—á–∏–º—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π")
        
        print("\n4. üè∑Ô∏è –°—Ç–∞—Ç—É—Å—ã —Ç–æ–∫–µ–Ω–æ–≤:")
        print("   ‚Ä¢ –¢–æ–∫–µ–Ω—ã –ø–µ—Ä–µ–≤–µ–¥–µ–Ω—ã –≤ 'monitoring' –∏–ª–∏ 'archived'")
        print("   ‚Ä¢ –¢–æ–ª—å–∫–æ 'active' —Ç–æ–∫–µ–Ω—ã –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏")
        
        print("\n5. ‚ö° –°–∏—Å—Ç–µ–º–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã:")
        print("   ‚Ä¢ –í—ã—Å–æ–∫–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä")
        print("   ‚Ä¢ –ü—Ä–æ–±–ª–µ–º—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö")
        print("   ‚Ä¢ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ–∫ –ø–∞–º—è—Ç–∏ –∏–ª–∏ CPU")
        
        # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        print(f"\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –£–°–¢–†–ê–ù–ï–ù–ò–Æ:")
        print("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–∞: systemctl status tothemoon.service")
        print("2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: journalctl -u tothemoon.service -f")
        print("3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–∏—Å: systemctl restart tothemoon.service")
        print("4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å DexScreener API")
        print("5. –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ —Å–Ω–∏–∂–µ–Ω–∏–µ min_score_change —Å 5% –¥–æ 2%")
        
        if very_stale_count > 0:
            print(f"\nüö® –¢–†–ï–ë–£–ï–¢–°–Ø –ù–ï–ú–ï–î–õ–ï–ù–ù–û–ï –í–ú–ï–®–ê–¢–ï–õ–¨–°–¢–í–û!")
            print(f"   {very_stale_count} —Ç–æ–∫–µ–Ω–æ–≤ –Ω–µ –æ–±–Ω–æ–≤–ª—è–ª–∏—Å—å >20 –º–∏–Ω—É—Ç")


if __name__ == "__main__":
    main()
