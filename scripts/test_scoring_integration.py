#!/usr/bin/env python3
"""
–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã —Å–≥–ª–∞–∂–∏–≤–∞–Ω–∏—è —Å–∫–æ—Ä–æ–≤.
"""

from __future__ import annotations

import sys
import logging
from src.core.json_logging import configure_logging
from src.adapters.db.base import SessionLocal
from src.adapters.repositories.tokens_repo import TokensRepository
from src.domain.settings.service import SettingsService
from src.domain.scoring.scorer import compute_score, compute_smoothed_score


def test_smoothing_integration():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å–≥–ª–∞–∂–∏–≤–∞–Ω–∏—è —Å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–º."""
    configure_logging(level="INFO")
    log = logging.getLogger("smoothing_test")
    
    with SessionLocal() as sess:
        repo = TokensRepository(sess)
        settings = SettingsService(sess)
        
        # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        alpha = float(settings.get("score_smoothing_alpha") or 0.3)
        weights = {
            "weight_s": float(settings.get("weight_s") or 0.35),
            "weight_l": float(settings.get("weight_l") or 0.25),
            "weight_m": float(settings.get("weight_m") or 0.20),
            "weight_t": float(settings.get("weight_t") or 0.20),
        }
        
        print(f"–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–≥–ª–∞–∂–∏–≤–∞–Ω–∏—è: Œ± = {alpha}")
        print(f"–í–µ—Å–∞ —Å–∫–æ—Ä–∏–Ω–≥–∞: {weights}")
        print()
        
        # –ù–∞–π–¥–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ç–æ–∫–µ–Ω –∏–ª–∏ —Å–æ–∑–¥–∞–¥–∏–º
        test_mint = "TestSmoothingMint1111111111111111111111"
        token = repo.get_by_mint(test_mint)
        
        if not token:
            # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ç–æ–∫–µ–Ω
            inserted = repo.insert_monitoring(
                mint=test_mint,
                name="Test Smoothing Token", 
                symbol="TST"
            )
            if not inserted:
                print("–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π —Ç–æ–∫–µ–Ω")
                return
            token = repo.get_by_mint(test_mint)
            repo.set_active(token)
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π —Ç–æ–∫–µ–Ω: {test_mint}")
        
        # –°–∏–º—É–ª–∏—Ä—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π —Å –≤–æ–ª–∞—Ç–∏–ª—å–Ω—ã–º–∏ –º–µ—Ç—Ä–∏–∫–∞–º–∏
        test_metrics = [
            {"L_tot": 10000, "delta_p_5m": 0.08, "delta_p_15m": 0.05, "n_5m": 150},  # score ‚âà 0.7
            {"L_tot": 50000, "delta_p_5m": 0.02, "delta_p_15m": 0.08, "n_5m": 80},   # score ‚âà 0.5
            {"L_tot": 8000, "delta_p_5m": 0.12, "delta_p_15m": 0.03, "n_5m": 200},  # score ‚âà 0.8
            {"L_tot": 30000, "delta_p_5m": 0.01, "delta_p_15m": 0.06, "n_5m": 60},  # score ‚âà 0.4
        ]
        
        print("–°–∏–º—É–ª—è—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π —Å–∫–æ—Ä–æ–≤:")
        print("–®–∞–≥ | –ò—Å—Ö–æ–¥–Ω—ã–π | –°–≥–ª–∞–∂–µ–Ω–Ω—ã–π | –†–∞–∑–Ω–∏—Ü–∞")
        print("-" * 40)
        
        previous_raw = None
        previous_smooth = None
        
        for i, metrics in enumerate(test_metrics):
            # –í—ã—á–∏—Å–ª—è–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π —Å–∫–æ—Ä
            raw_score, _ = compute_score(metrics, weights)
            
            # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Å–≥–ª–∞–∂–µ–Ω–Ω—ã–π —Å–∫–æ—Ä
            prev_smoothed_score = repo.get_previous_smoothed_score(token.id)
            
            # –í—ã—á–∏—Å–ª—è–µ–º —Å–≥–ª–∞–∂–µ–Ω–Ω—ã–π —Å–∫–æ—Ä
            smoothed_score = compute_smoothed_score(raw_score, prev_smoothed_score, alpha)
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ë–î
            snap_id = repo.insert_score_snapshot(
                token_id=token.id,
                metrics=metrics,
                score=raw_score,
                smoothed_score=smoothed_score
            )
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            raw_change = f"{raw_score - previous_raw:+.3f}" if previous_raw else "‚Äî"
            smooth_change = f"{smoothed_score - previous_smooth:+.3f}" if previous_smooth else "‚Äî"
            
            print(f" {i+1:2d}  |  {raw_score:.3f}   |   {smoothed_score:.3f}    | Œî={smooth_change}")
            
            previous_raw = raw_score
            previous_smooth = smoothed_score
        
        print()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å—Ç–æ—Ä–∏—é
        history = repo.get_score_history(token.id, limit=10)
        print(f"‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ {len(history)} –∑–∞–ø–∏—Å–µ–π –≤ –∏—Å—Ç–æ—Ä–∏–∏")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π —Å–Ω–∞–ø—à–æ—Ç
        latest = repo.get_latest_snapshot(token.id)
        if latest:
            print(f"‚úÖ –ü–æ—Å–ª–µ–¥–Ω–∏–π —Å–Ω–∞–ø—à–æ—Ç: score={latest.score}, smoothed_score={latest.smoothed_score}")
        
        print()
        print("üéâ –¢–µ—Å—Ç —Å–≥–ª–∞–∂–∏–≤–∞–Ω–∏—è –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ!")
        print(f"üìä –¢–æ–∫–µ–Ω –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤ UI: {test_mint}")


if __name__ == "__main__":
    test_smoothing_integration()
